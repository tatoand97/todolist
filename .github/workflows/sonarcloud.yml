name: SonarCloud (Go API)

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

# Requerido para subir resultados a Code Scanning y decorar PRs
permissions:
  contents: read
  pull-requests: read
  security-events: write

jobs:
  sonar:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # necesario para PR decoration

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23.x'  # el repo declara Go 1.23.0 en go.mod
          check-latest: true

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Mod download
        run: go mod download

      - name: Build (sanity)
        run: go build ./...

      - name: Run tests with coverage (if any)
        shell: bash
        run: |
          echo "mode: set" > coverage.out
          # Ejecuta tests; si no hay tests, no falla el job
          go test ./... -coverprofile=coverage.tmp -covermode=set || true
          if [ -f coverage.tmp ]; then
            tail -n +2 coverage.tmp >> coverage.out
          fi
          rm -f coverage.tmp || true

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@4006f663ecaf1f8093e8e4abb9227f6041f52216
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          args: |
            -Dsonar.projectKey=tatoand97_todolist
            -Dsonar.organization=tatoand97
            -Dsonar.host.url=https://sonarcloud.io
            -Dsonar.sources=internal,cmd/api
            -Dsonar.tests=internal,cmd/api
            -Dsonar.test.inclusions=**/*_test.go
            -Dsonar.exclusions=client/**,static/**,**/*.md,**/*.yaml,**/*.yml,**/*.json
            -Dsonar.go.coverage.reportPaths=coverage.out
            -Dsonar.language=go
          projectBaseDir: .
